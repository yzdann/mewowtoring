worker_processes 1;

events {
  worker_connections 1024;
}

http {
  default_type text/html;
  sendfile on;
  keepalive_timeout 65;
  resolver 127.0.0.11 valid=10s ipv6=off;

  lua_shared_dict prometheus_metrics 10M;
  lua_package_path '/usr/local/openresty/luajit/lib/?.lua;;';
  init_by_lua '
    prometheus = require("prometheus").init("prometheus_metrics")
    metric_requests = prometheus:counter(
      "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
    metric_latency = prometheus:histogram(
      "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
    metric_connections = prometheus:gauge(
      "nginx_http_connections", "Number of HTTP connections", {"state"})
  ';
  log_by_lua '
    metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
    metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
  ';

  include /etc/nginx/conf.d/main.conf;
}
